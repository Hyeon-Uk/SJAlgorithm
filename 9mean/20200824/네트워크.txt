#include <string>
#include <vector>
#include <algorithm>

using namespace std;

int v[201]={0};
vector <int> net[201];
void dfs(int start){
    v[start]=1;
    //start부분에 연결된것이 더이상 없으면 return
    for(int k=0;k<net[start].size();k++){
        int next=net[start][k];
           if(!v[next])  dfs(next);
    }
}

int solution(int n, vector<vector<int>> computers) {
    int answer = 0;
    
    for(int i=0;i<n;i++){
        for(int j=0;j<n;j++)
            if(computers[i][j])
            {    net[i].push_back(j);
                 net[j].push_back(i);
            }
    }
    for(int i=0;i<n;i++){
        if(!v[i])
        {
            dfs(i);
            answer++;
        }
    }
    return answer;
}