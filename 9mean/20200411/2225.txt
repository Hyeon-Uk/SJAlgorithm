#include <cstdio>
#include <algorithm>
#include <cstring>
using namespace std;
int n,k;
int dp_k[202][202];
int func(int k,int n){
	for(int i=1;i<=n;i++)
	{dp_k[2][i]=i+1;
	dp_k[i][0]=1;
	}
	for(int i=3;i<=k;i++){
		for(int j=1;j<=n;j++){
		dp_k[i][j]=(dp_k[i][j-1]+dp_k[i-1][j])%1000000000;
		}
	}
	return dp_k[k][n];
}
int main() {
	memset(dp_k, 0, sizeof(dp_k));
	scanf("%d%d",&n,&k);
	printf("%d\n",func(k,n));
	return 0;
}
////
#include <cstdio>
#include <algorithm>
#include <cstring>
using namespace std;
int n,k;
long long d[202][202];
long long mod=1000000000;
int main() {
	scanf("%d%d",&n,&k);
	d[0][0]=1;
	for (int i=1; i<=k; i++) {
        for (int j=0; j<=n; j++) {
            for (int l=0; l<=j; l++) {
             d[i][j] += d[i-1][j-l];
                d[i][j] %= mod;
            }
        }
    }
    printf("%lld",d[k][n]);
	return 0;
}